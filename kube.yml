apiVersion: v1
kind: Service
metadata:
  name: %HOST%
  namespace: portal-base
  labels:
    run: %HOST%
    env: $ENV
spec:
  ports:
  - port: 80
    targetPort: 3000
  selector:
    run: %HOST%
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: %HOST%
  namespace: portal-base
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: $HOST
      http:
        paths:
          - path: /
            backend:
              serviceName: %HOST%
              servicePort: 80
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: %HOST%
  namespace: portal-base
  labels:
    run: %HOST%
    env: $ENV
spec:
  replicas: 2
  template:
    metadata:
      annotations:
        ad.datadoghq.com/%HOST%.logs: '[{"source":"node-pino","service":"%HOST%"}]'
        ad.datadoghq.com/%HOST%.tags: '{"environment":"$ENV"}'
      labels:
        run: %HOST%
    spec:
      containers:
      - name: %HOST%
        image: $AWS_ECR_ACCOUNT_URL/%HOST%:$CIRCLE_SHA1
        ports:
        - containerPort: 3000
        env:
          - name: NODE_ENV
            value: production
          - name: ENV
            value: $ENV
          - name: COMMIT_HASH
            value: $CIRCLE_SHA1
          - name: CLOUDFRONT_DIST_ID
            value: $CLOUDFRONT_DIST_ID
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: %HOST%-env
                key: awsAccessKeyId
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: %HOST%-env
                key: awsSecretAccessKey
